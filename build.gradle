/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kangkang' at '17-1-23 下午8:53' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'log4j:log4j:1.2.17'
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.3.RELEASE'
// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-eureka
    compile 'org.springframework.cloud:spring-cloud-starter-eureka:1.3.2.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.3.RELEASE'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.

    testCompile 'junit:junit:4.12'
    testCompile 'org.springframework:spring-test:2.5.6'
    testCompile 'org.testng:testng:6.1.1'
}
